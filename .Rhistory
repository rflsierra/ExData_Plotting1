names(cpe2014) <- c("parroquias - grupos","2002","2004","2006","2007","2009","2013","2014")
cpet <- merge(x = cpe2014, y = leyenda.pg, by = "parroquia - grupo", all.x =  = TRUE))
cpet <- merge(x = cpe2014, y = leyenda.pg, by = "parroquia - grupo", all.x = TRUE))
cpet <- merge(x = cpe2014, y = leyenda.pg, by = "parroquia - grupo", all.x = TRUE)
cpet <- merge(x = cpe2014, y = leyenda.pg, by = "parroquias - grupo", all.x = TRUE)
cpet <- merge(x = cpe2014, y = leyenda.pg, by = "parroquias - grupos", all.x = TRUE)
View(cpet)
View(registro.2004)
## Concatena listas compuestas por etario + genero
conc.parr.sexo <- lapply(lregistro, function(x) data.frame(paste(x$parroquia,x$sexo,sep = " - "),x$parroquia,x$sexo,x$electores))
conc.parr.sexo.simple <- lapply(conc.parr.sexo, function(x) data.frame(x[,1], x[,4]))
conc.parr.sexo.simple <- sapply(conc.parr.sexo.simple, function(x) tapply(x[,2], x[,1], sum))
## cpe = concatenado parroquia - etario
## Inicializa data frame para hacer outer left join con 2014 como extremo izquierdo
cps2014 <- data.frame(0,conc.parr.sexo.simple[length(conc.parr.sexo.simple)])
cps2014[1] <- row.names(cpe2014)
names(cps2014) <- c("parroquia - sexo", "electores")
cpp.temp <- length(conc.parr.sexo.simple) - 1
## Recorre data frames de las distintas elecciones y los va anadiendo al original de 2014
for (i in 1:(length(conc.parr.sexo.simple)-1)) {
cps.temp <- data.frame(0,conc.parr.sexo.simple[cpp.temp])
cps.temp[1] <- row.names(cps.temp)
names(cps.temp) <- c("parroquia - sexo", "electores")
cps2014 <- merge(x = cps2014, y = cps.temp, by = "parroquia - sexo", all = TRUE)
## Cambiar a all.x = TRUE en caso de merge asumiendo 2014 como target final, all = TRUE para merge completo
cpp.temp <- cpp.temp - 1
}
## Asigna nombres correctos al data frame final
cps2014 <- cps2014[, c(1,8,7,6,5,4,3,2)]
names(cps2014) <- c("parroquia - sexo","2002","2004","2006","2007","2009","2013","2014")
## Creacion de leyenda para parroquia - grupo
leyenda.ps <- rbind(conc.parr.sexo[[1]],conc.parr.sexo[[2]],conc.parr.sexo[[3]],conc.parr.sexo[[4]],conc.parr.sexo[[5]],conc.parr.sexo[[6]],conc.parr.sexo[[7]])
leyenda.ps[,4] <- NULL
leyenda.ps <- leyenda.ps[!duplicated(leyenda.pg),]
names(leyenda.ps) <- c("parroquia - sexo","parroquia","sexo")
cps2014 <- merge(x = cps2014, y = leyenda.ps, by = "parroquia - sexo", all.x = TRUE)
#### ****** Cruces de resultados estadisticos de grupos etarios por sector
View(leyenda.ps)
leyenda.ps <- leyenda.ps[!duplicated(leyenda.ps),]
cps2014 <- merge(x = cps2014, y = leyenda.ps, by = "parroquia - sexo", all.x = TRUE)
View(cps2014)
View(conc.parr.sexo.simple[1])
View(conc.parr.sexo.simple[[1])
View(conc.parr.sexo.simple[[1]])
## Concatena listas compuestas por etario + genero
conc.parr.sexo <- lapply(lregistro, function(x) data.frame(paste(x$parroquia,x$sexo,sep = " - "),x$parroquia,x$sexo,x$electores))
conc.parr.sexo.simple <- lapply(conc.parr.sexo, function(x) data.frame(x[,1], x[,4]))
conc.parr.sexo.simple <- sapply(conc.parr.sexo.simple, function(x) tapply(x[,2], x[,1], sum))
## cpe = concatenado parroquia - etario
## Inicializa data frame para hacer outer left join con 2014 como extremo izquierdo
cps2014 <- data.frame(0,conc.parr.sexo.simple[length(conc.parr.sexo.simple)])
cps2014[1] <- row.names(cps2014)
names(cps2014) <- c("parroquia - sexo", "electores")
cpp.temp <- length(conc.parr.sexo.simple) - 1
## Recorre data frames de las distintas elecciones y los va anadiendo al original de 2014
for (i in 1:(length(conc.parr.sexo.simple)-1)) {
cps.temp <- data.frame(0,conc.parr.sexo.simple[cpp.temp])
cps.temp[1] <- row.names(cps.temp)
names(cps.temp) <- c("parroquia - sexo", "electores")
cps2014 <- merge(x = cps2014, y = cps.temp, by = "parroquia - sexo", all = TRUE)
## Cambiar a all.x = TRUE en caso de merge asumiendo 2014 como target final, all = TRUE para merge completo
cpp.temp <- cpp.temp - 1
}
## Asigna nombres correctos al data frame final
cps2014 <- cps2014[, c(1,8,7,6,5,4,3,2)]
names(cps2014) <- c("parroquia - sexo","2002","2004","2006","2007","2009","2013","2014")
## Creacion de leyenda para parroquia - grupo
leyenda.ps <- rbind(conc.parr.sexo[[1]],conc.parr.sexo[[2]],conc.parr.sexo[[3]],conc.parr.sexo[[4]],conc.parr.sexo[[5]],conc.parr.sexo[[6]],conc.parr.sexo[[7]])
leyenda.ps[,4] <- NULL
leyenda.ps <- leyenda.ps[!duplicated(leyenda.ps),]
names(leyenda.ps) <- c("parroquia - sexo","parroquia","sexo")
cps2014 <- merge(x = cps2014, y = leyenda.ps, by = "parroquia - sexo", all.x = TRUE)
#### ****** Cruces de resultados estadisticos de grupos etarios por sector
View(cps2014)
rm(list = ls())
source('~/Dropbox/Asesoría/Roraima SC/Consultoría/Asesorías/2015-09 - Tierra y Data Mining - Ecuador/Análisis numérico/Desarrollo/Analisis Fase I -v1.R', echo=TRUE)
save.image("~/Dropbox/Asesoría/Roraima SC/Consultoría/Asesorías/2015-09 - Tierra y Data Mining - Ecuador/Análisis numérico/Desarrollo/WS 08-10 1am.RData")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?lines
?text
?lpoints
?points
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?par
?trellis.par.set
?print.trellis
?slom
?splom
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
?ggplot2
install.packages("ggplot2")
library("ggplot2")
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
setwd("~/Dropbox/Estudios/e-Learning/Coursera/Data Science Specialization/4. Exploratory Data Analysis/Week 1")
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", destfile = "power.zip", method = "curl")
setwd("~/Dropbox/Estudios/e-Learning/Coursera/Data Science Specialization/4. Exploratory Data Analysis/Week 1/ExData_Plotting1")
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", destfile = "power.zip", method = "curl")
unzip("power.zip")
?read.table
rm(list = ls())
?strptime
?as.Date
?read.table
file.choose()
db.file <- file.choose()
power <- read.table(db.file, header = TRUE, sep = ";")
View(power)
View(power)
View(power)
23438
68078
power <- read.table(db.file, header = TRUE, sep = ";", skip = 23437, nrows = 68079)
View(power)
class(power[1])
lapply(power,class)
levels(power[1])
levels(power[[1])
levels(power[[1]])
power <- read.table(db.file, header = TRUE, sep = ";")
View(power)
lapply(power,class)
power$Date <-  as.Date(power$Date)
lapply(power,class)
power[2,1]
power <- read.table(db.file, header = TRUE, sep = ";", na.strings ="?")
power.dt <- power[power$Date == "2/1/2007" & power$DDate == "2/2/2007"]
power.dt <- power[power$Date == "2/1/2007" & power$DDate == "2/2/2007",]
View(power.dt)
power.dt <- power[power$Date == "1/2/2007" & power$DDate == "2/2/2007",]
power.dt <- power[power$Date == "1/2/2007" | power$DDate == "2/2/2007",]
power.dt <- power[power$Date == "1/2/2007" | power$DDate == "2/2/2007",]
power.dt <- power[power$Date == "1/2/2007" | power$Date == "2/2/2007",]
power.dt <- power[Date == "1/2/2007" | Date == "2/2/2007",]
View(power.dt)
rm(power.dt)
power.dt <- power[power$Date == "1/2/2007" | power$Date == "2/2/2007",]
power.dt$Date <- as.Date(power.dt$Date, %d %m %y)
?as.Date
?strftime
?strptime
power.dt$Date <- as.Date(power.dt$Date, "%d %m %y")
power.dt <- power[power$Date == "1/2/2007" | power$Date == "2/2/2007",]
power.dt$Date <- as.Date(power.dt$Date, "%d %m %y")
power.dt <- power[power$Date == "1/2/2007" | power$Date == "2/2/2007",]
View(power.dt)
power.dt$Date <- as.Date(power.dt$Date, "%d %m %y")
power.dt <- power[power$Date == "1/2/2007" | power$Date == "2/2/2007",]
levels(power.dt$Date)
unique(power.dt$Date)
lapply(power.dt,class)
power <- read.table(db.file, header = TRUE, sep = ";", na.strings = c("?",""))
power.dt <- power[power$Date == "1/2/2007" | power$Date == "2/2/2007",]
power.dt$Date <- as.Date(power.dt$Date, format = "%d/%m/%Y")
View(power.dt)
DateTime <- paste(power.dt$Date, power.dt$Time)
DateTime
power.dt$Time <- strptime(DateTime, format = "%Y-%m-%d %H:%M:%S")
View(power.dt)
lapply(power.dt,class)
hist(power.dt$Global_active_power)
title("Global Active Power")
?hist
title(main = "Global Active Power")
hist(power.dt$Global_active_power, main = "Global Active Power")
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
dev.copy(png, file = "plot1.png")
getwd()
dev.copy(png, file = "/Users/rflsierra/Dropbox/Estudios/e-Learning/Coursera/Data Science Specialization/4. Exploratory Data Analysis/Week 1/ExData_Plotting1/plot1.png")
dev.cur()
hist(power.dt$Global_active_power, main = "Gobal Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
dev.off()
hist(power.dt$Global_active_power, main = "Gobal Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
dev.copy(png, file = "plot1.png")
dev.off()
?axis
plot(x = power.dt$Time, y = power.dt$Global_active_power)
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l")
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Gobal Active Power (kilowatts)")
dev.copy(png, file = "plot2.png")
dev.off()
plot(power.dt, type = "n")
?plot
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "n")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
?points
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
?legend
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright")
legend("topright", col = c("black", "red", "blue"))
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch = -, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch = 2, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch = 22, col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
?legend
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch = "---", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch = "---", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "---", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file = "plot2.png")
dev.off()
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file = "plot2.png")
dev.off()
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file = "plot3.png")
dev.off()
legend("topright", pch = "l", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
png("Plot43png", width = 480, height=480, type="window")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## dev.copy(png, file = "plot3.png")
dev.off()
png("plot3.png", width = 480, height=480, type="window")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## dev.copy(png, file = "plot3.png")
dev.off()
?png
png(filename = "plot3.png", width = 480, height=480, type="window")
png(filename = "plot%03d.png", width = 480, height=480, type="window")
png(filename = "plot3.png", width = 480, height=480, type="cairo-png")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## dev.copy(png, file = "plot3.png")
dev.off()
?par
par(mar = c(5, 4, 4, 4))
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file = "plot3.png")
dev.off()
par(mar = c(5, 4, 4, 7))
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file = "plot3.png")
dev.off()
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Gobal Active Power (kilowatts)")
dev.copy(png, file = "plot2.png")
dev.off()
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
dev.copy(png, file = "plot1.png")
dev.off()
par(mar = c(5, 4, 4, 7))
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.copy(png, file = "plot3.png")
dev.off()
?png
png("plot3.png")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
par(mfrow = c(2,2))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", xlab = "", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", xlab = "", ylab = "Global_reactive_power", xlab = "datetime")
par(mfrow = c(2,2))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", xlab = "", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", xlab = "", ylab = "Global_reactive_power", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", ylab = "Global_reactive_power", xlab = "datetime")
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", ylab = "Global_reactive_power", xlab = "datetime")
dev.copy(png, file = "plot4.png")
dev.off()
?par
par(mfrow = c(2,2), mar = c(4, 2, 2, 1), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
par(mfrow = c(2,2), mar = c(4, 4, 3, 2), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
par(omd)
par("omd")
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0), mgp = c(3,0,0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
?legend
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n")
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", ylab = "Global_reactive_power", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n")
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", ylab = "Global_reactive_power", xlab = "datetime")
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n")
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", ylab = "Global_reactive_power", xlab = "datetime")
dev.copy(png, file = "plot4.png")
dev.off()
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", pt.cex = 1, cex = 1)
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", pt.cex = 1, cex = 1)
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", ylab = "Global_reactive_power", xlab = "datetime")
dev.copy(png, file = "plot4.png")
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", pt.cex = 1, cex = 0.5)
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", ylab = "Global_reactive_power", xlab = "datetime")
dev.copy(png, file = "plot4.png")
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", pt.cex = 1, cex = 0.5)
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", ylab = "Global_reactive_power", xlab = "datetime")
dev.copy(png, file = "plot4.png")
dev.off()
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", pt.cex = 1, cex = 0.5)
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", ylab = "Global_reactive_power", xlab = "datetime")
dev.copy(png, file = "plot4.png")
dev.off()
png("plot4.png")
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", pt.cex = 1, cex = 0.7)
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", ylab = "Global_reactive_power", xlab = "datetime")
##dev.copy(png, file = "plot4.png")
dev.off()
png("plot4.png")
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", pt.cex = 1, cex = 1.2)
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", ylab = "Global_reactive_power", xlab = "datetime")
##dev.copy(png, file = "plot4.png")
dev.off()
png("plot4.png")
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", pt.cex = 1, cex = 1)
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", ylab = "Global_reactive_power", xlab = "datetime")
##dev.copy(png, file = "plot4.png")
dev.off()
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
dev.copy(png, file = "plot1.png")
dev.off()
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
dev.copy(png, file = "plot1.png")
dev.off()
par()
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
?par
par(no.readonly = TRUE)
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
par(par(no.readonly = TRUE))
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
dev.off()
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
dev.copy(png, file = "plot1.png")
dev.off()
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
dev.copy(png, file = "plot1.png")
dev.off()
dev.new()
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
dev.new()
dev.new()
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
dev.copy(png, file = "plot1.png")
dev.new()
png("plot4.png")
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(x = power.dt$Time, y = power.dt$Voltage, type = "l", ylab = "Voltage", xlab = "datetime")
plot(x = power.dt$Time, y = power.dt$Sub_metering_1, type = "l", xlab = "", ylab = "Enery sub metering")
points(x = power.dt$Time, y = power.dt$Sub_metering_2, type = "l", col = "red")
points(x = power.dt$Time, y = power.dt$Sub_metering_3, type = "l", col = "blue")
legend("topright", pch = "-", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", pt.cex = 1, cex = 1)
plot(x = power.dt$Time, y = power.dt$Global_reactive_power, type = "l", ylab = "Global_reactive_power", xlab = "datetime")
dev.off()
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
dev.copy(png, file = "plot1.png")
dev.off()
?dev.new
## Create histogram of "Global Active Power", colored in red
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
dev.copy(png, file = "plot1.png")
dev.off()
## Plot time vs Global active power
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
## Copy to a new device (png)
dev.copy(png, file = "plot2.png")
dev.off()
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
dev.new()
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
?par
par(mfrow = c(1,1), mar = c(5, 4, 4, 2) + 0.1)
## Create histogram of "Global Active Power", colored in red
hist(power.dt$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", col = "red")
## Copy to a new device (png)
dev.copy(png, file = "plot1.png")
dev.off()
par(mfrow = c(1,1), mar = c(5, 4, 4, 2) + 0.1)
plot(x = power.dt$Time, y = power.dt$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
## Copy to a new device (png)
